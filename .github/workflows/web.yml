name: Web CI/CD

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'web/**'
      - '.github/workflows/web.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'web/**'

env:
  NODE_VERSION: '20.x'

jobs:
  # Build and test React app
  build-and-test:
    name: Build and Test React App
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: web/package-lock.json

      - name: Install dependencies
        working-directory: ./web
        run: npm ci

      - name: Run linter
        working-directory: ./web
        run: npm run lint

      - name: TypeScript type check
        working-directory: ./web
        run: npm run type-check
        continue-on-error: true

      - name: Build React app
        working-directory: ./web
        run: npm run build
        env:
          VITE_API_URL: https://allowancetracker-api.azurewebsites.net

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: web-build-${{ github.sha }}
          path: ./web/dist
          retention-days: 30

  # Lighthouse CI (optional)
  lighthouse:
    name: Lighthouse CI
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: web-build-${{ github.sha }}
          path: ./web/dist

      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          uploadArtifacts: true
          temporaryPublicStorage: true
          configPath: './web/lighthouserc.json'
        continue-on-error: true

  # Deploy to Azure Storage (Static Website)
  deploy-web:
    name: Deploy Web to Azure Storage
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment:
      name: production
      url: https://${{ vars.AZURE_STORAGE_ACCOUNT_NAME }}.z13.web.core.windows.net

    steps:
      - name: Download web build artifact
        uses: actions/download-artifact@v4
        with:
          name: web-build-${{ github.sha }}
          path: ./web/dist

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Upload to Azure Storage
        uses: azure/CLI@v1
        with:
          inlineScript: |
            # Enable static website hosting
            az storage blob service-properties update \
              --account-name ${{ vars.AZURE_STORAGE_ACCOUNT_NAME }} \
              --static-website \
              --404-document index.html \
              --index-document index.html

            # Upload files to $web container
            az storage blob upload-batch \
              --account-name ${{ vars.AZURE_STORAGE_ACCOUNT_NAME }} \
              --auth-mode login \
              --source ./web/dist \
              --destination '$web' \
              --overwrite

      - name: Purge Azure CDN (if configured)
        uses: azure/CLI@v1
        with:
          inlineScript: |
            if [ -n "${{ vars.AZURE_CDN_PROFILE }}" ] && [ -n "${{ vars.AZURE_CDN_ENDPOINT }}" ]; then
              az cdn endpoint purge \
                --resource-group ${{ vars.AZURE_RESOURCE_GROUP }} \
                --profile-name ${{ vars.AZURE_CDN_PROFILE }} \
                --name ${{ vars.AZURE_CDN_ENDPOINT }} \
                --content-paths "/*"
            else
              echo "CDN not configured, skipping purge"
            fi
        continue-on-error: true

      - name: Logout from Azure
        run: az logout
        if: always()
