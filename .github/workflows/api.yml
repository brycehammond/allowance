name: API CI/CD

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'src/**'
      - '.github/workflows/api.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'src/**'

env:
  DOTNET_VERSION: '8.0.x'

jobs:
  # Build and test API
  build-and-test:
    name: Build and Test API
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies
        run: dotnet restore

      - name: Build solution
        run: dotnet build --configuration Release --no-restore

      - name: Run tests
        run: dotnet test --configuration Release --no-build --verbosity normal --logger "trx;LogFileName=test-results.trx" --collect:"XPlat Code Coverage"

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: api-test-results
          path: '**/test-results.trx'

      - name: Upload code coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: api-code-coverage
          path: '**/coverage.cobertura.xml'

  # Code quality checks
  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies
        run: dotnet restore

      - name: Check code formatting
        run: dotnet format --verify-no-changes --no-restore
        continue-on-error: true

      - name: Build with warnings as errors
        run: dotnet build --no-restore -warnaserror
        continue-on-error: true

  # Build Docker image
  build-docker:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: allowance-tracker-api:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
