@page "/login"
@using AllowanceTracker.Services
@using Microsoft.AspNetCore.Identity
@using System.ComponentModel.DataAnnotations
@inject IAccountService AccountService
@inject NavigationManager Navigation

<PageTitle>Login - Allowance Tracker</PageTitle>

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-5">
            <div class="card">
                <div class="card-body">
                    <h3 class="card-title text-center mb-4">Login</h3>

                    @if (!string.IsNullOrEmpty(ErrorMessage))
                    {
                        <div class="alert alert-danger" role="alert">
                            @ErrorMessage
                        </div>
                    }

                    <EditForm Model="@Model" OnValidSubmit="@HandleLogin">
                        <DataAnnotationsValidator />

                        <div class="mb-3">
                            <label class="form-label">Email</label>
                            <InputText @bind-Value="Model.Email" class="form-control" name="email" />
                            <ValidationMessage For="@(() => Model.Email)" />
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Password</label>
                            <InputText type="password" @bind-Value="Model.Password" class="form-control" name="password" />
                            <ValidationMessage For="@(() => Model.Password)" />
                        </div>

                        <div class="mb-3 form-check">
                            <InputCheckbox @bind-Value="Model.RememberMe" class="form-check-input" id="rememberMe" />
                            <label class="form-check-label" for="rememberMe">
                                Remember me
                            </label>
                        </div>

                        <button type="submit" class="btn btn-primary w-100" disabled="@IsProcessing">
                            @if (IsProcessing)
                            {
                                <span class="spinner-border spinner-border-sm me-2"></span>
                                <span>Logging in...</span>
                            }
                            else
                            {
                                <span>Login</span>
                            }
                        </button>
                    </EditForm>

                    <div class="mt-3 text-center">
                        <p>Don't have an account? <a href="/register">Register</a></p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private LoginModel Model = new();
    private bool IsProcessing = false;
    private string? ErrorMessage;

    private async Task HandleLogin()
    {
        IsProcessing = true;
        ErrorMessage = null;

        try
        {
            var result = await AccountService.LoginAsync(Model.Email, Model.Password, Model.RememberMe);

            if (result.Succeeded)
            {
                Navigation.NavigateTo("/dashboard", forceLoad: true);
            }
            else if (result.IsLockedOut)
            {
                ErrorMessage = "Account is locked out.";
            }
            else
            {
                ErrorMessage = "Invalid email or password.";
            }
        }
        catch (Exception ex)
        {
            ErrorMessage = "An error occurred during login. Please try again.";
        }
        finally
        {
            IsProcessing = false;
        }
    }

    private class LoginModel
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; } = string.Empty;

        [Required]
        public string Password { get; set; } = string.Empty;

        public bool RememberMe { get; set; } = false;
    }
}
